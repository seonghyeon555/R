setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessTokenSecret)
setup_twitter_oauth(consumerKey,consumerSecret, accessToken, accessTokenSecret)
library(twitteR) # 패키지 로드
library(twitteR) # 패키지 로드
library(twitteR) # 패키지 로드
consumerKey = "0iApiCFYRk2VLXPvquUTvRj67"
consumerSecret = "UCxXRCpPUBzcLEGqK0R1XhHo9aS2cC6goKm52sRy5p316EBMg4"
accessToken = "74414052-7DLWvzEEVHhGqnfUhr6U4ioEc74oA0pQCpLFsPvhj"
accessTokenSecret = "31FhCeVp7selgZxTdSJ6O6GpXSv5c6G7WypjjYDBwjxpD"
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessTokenSecret)
a = "4OGxbiGE8Z3tXWA9pSRsks7SC"
b = "izX15KJgzuWsi1XdgklrsQRqVz9qTVZWYdwE7z8JkV27psaE4Y"
c = "71181251-KSVuiSbLgF6IGsoePsZhqCI7kXvoLEo83Swgtxqam"
d = "trXrZaUrLldIQs7WyRH4MtCQnGEcKZxHtP93RR4ZKLjpf"
setup_twitter_oauth(a, b, c, d)
keyword <-enc2utf8("월드컵") #한글로 데이터형 변환
bigdata <- searchTwitter(keyword, n=100, lang="ko") #한국어 100개 크롤링
head(bigdata)
#크롤링 데이터를 데이터 프레임으로 변환 gn bigdata_df에 할당
bigdata_df <- twListToDF(bigdata)
str(bigdata_df)
bigdata_text <- bigdata_df$text #text만 추출
head(bigdata_text)
library(KoNLP)  # KoNLP 패키지 로드
useSejongDic()  # 세종사전 설정
install.packages("KoNLP")
library(KoNLP)  # KoNLP 패키지 로드
useSejongDic()  # 세종사전 설정
library(KoNLP)
useSejongDic()
bigdata_noun <- sapply(bigdata_text, extractNoun, USE.NAMES = F)
bigdata_noun <- unlist(bigdata_noun)
View(bigdata_noun)
# 2글자 이상인 단어만 추출하여 저장
bigdata_noun <- Filter(function(x) { nchar(x) >= 2 }, bigdata_noun)
bigdata_noun <- gsub("[A-Za-z0-9]", "", bigdata_noun)           # 영어, 숫자 제거
bigdata_noun <- gsub("[~!@#$%^&*()-_|+=?:]", "", bigdata_noun)  # 특수문제 제거
bigdata_noun <- gsub("[ㄱ-ㅎ]", "", bigdata_noun)               # ㄱ부터 ㅎ까지 자음 제거
bigdata_noun <- gsub("(ㅜ|ㅠ)+", "", bigdata_noun)              # 한 개 이상의 ㅜㅠ 제거
word_table <- table(bigdata_noun)
library(wordcloud2)
wordcloud2(word_table, fontFamily = "맑은 고딕", size = 5, color = "random-light", backgroundColor = "black")
install.packages("wordcloud2")
library(wordcloud2)
wordcloud2(word_table, fontFamily = "맑은 고딕", size = 5, color = "random-light", backgroundColor = "black")
wordcloud2(word_table, fontFamily = "맑은 고딕", size = 5, color = "random-light", backgroundColor = "black")
data <- read.csv("치킨집_가공.csv", sep = "\t")
data <- read.csv("치킨집_가공.csv", sep = "\t")
View(data)
head(data)
data <- read.csv("c://Rstudy/치킨집_가공.csv", sep = "\t")
station_data <- read.csv("13._역별_주소_및_전화번호.csv")
head(station_data)
data <- read.csv("치킨집_가공.csv")
data <- read.csv("치킨집_가공.csv", sep = "\t"))
data <- read.csv("치킨집_가공.csv", sep = "\t")
data <- read.csv("치킨집_가공.csv", sep = "\tap")
data <- read.csv("치킨집_가공.csv", sep = "\Tap")
data <- read.csv("치킨집_가공.csv", sep = "\T")
data <- read.csv("치킨집_가공.csv", sep =sep )
data <- read.csv("치킨집_가공.csv", sep = "/t" )
data <- read.csv("치킨집_가공.csv", sep = "\t" )
data <- read.csv("치킨집_가공.csv", sep = "," )
head(data)
View(data)
library("readxl")
data <- read_excel("치킨집_가공.xlsx")
head(data)
addr <- substr(data$소재지전체주소, 12, 16)
head(addr)
head(addr)
head(addr)
)
head(addr)
addr <- substr(data$소재지전체주소, 11, 14)
head(addr)
addr <- substr(data$소재지전체주소, 11, 15)
head(addr)
addr <- substr(data$소재지전체주소, 11, 16)
head(addr)
addr <- substr(data$소재지전체주소, 11, 16)
head(addr)
addr_num <- gsub("[0-9]", "", addr) #숫자제거
addr_trim <- gsub(" ", "", addr_num) #공백제거
head(addr_trim)
library(dplyr)
addr_count <- addr_trim %>% table() %>% data.frame()
head(addr_count)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
addr_count <- addr_trim %>% table() %>% data.frame()
head(addr_count)
addr_num <- gsub("[0-9]", "", addr) #숫자제거
addr_trim <- gsub(" ", "", addr_num) #공백제거
head(addr_trim)
addr_count <- addr_trim %>% table() %>% data.frame()
library(dplyr)
install.packages("dplyr")
library(dplyr)
library(dplyr)
library("readxl")                       # 패키지 로드
data <- read_excel("치킨집_가공.xlsx")  # 엑셀 데이터 가져온 후 data에 할당
head(data)                              # data 확인
addr <- substr(data$소재지전체주소, 11, 16)
head(addr)          # addr 확인
addr_num <- gsub("[0-9]", "", addr)     # 숫자 제거
addr_trim <- gsub(" ", "", addr_num)    # 공백 제거
head(addr_trim)
library(dplyr)
addr_count <- addr_trim %>% table() %>% data.frame()
library(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages(c("ggplot2", "munsell", "pillar", "Rcpp", "RgoogleMaps", "rjson", "rlang", "sp", "stringi", "utf8"))
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
installed.packages()
install.packages("dplyr")
library(dplyr)
addr_count <- addr_trim %>% table() %>% data.frame()
head(addr_count)
library(dplyr)
addr_count <- addr_trim %>% table() %>% data.frame()
head(addr_count)
install.packages("treemap")
library(treemap)
treemap(addr_count, index = ".", vSize = "Freq", title = "서대문구 동별 치킨집 분표")
treemap(addr_count, index = ".", vSize = "Freq", title = "서대문구 동별 치킨집 분표")
treemap(addr_count, index = ".", vSize = "Freq", title = "서대문구 동별 치킨집 분표")
()
arrange(addr_count, desc(Freq)) %>% head()
# dustdata.xlsx 파일을 불러온 후 dustdata_anal에 할당
dustdata_anal <- read_excel("C:/Rstudy/dustdata.xlsx")
library(dplyr)      # dplyr 패키지 로드
library(readxl)    # readxl 패키지 로드
# dustdata.xlsx 파일을 불러온 후 dustdata_anal에 할당
dustdata_anal <- read_excel("C:/Rstudy/dustdata.xlsx")
View(dustdata_anal)
str(dustdata_anal)
# dustdata.xlsx 파일을 불러온 후 dustdata_anal에 할당
dustdata_anal <- read_excel("C:/Rstudy/dustdata.xls")
# dustdata.xlsx 파일을 불러온 후 dustdata_anal에 할당
dustdata_anal <- read_excel("C:/Rstudy/dustdata.xls")
# dustdata.xlsx 파일을 불러온 후 dustdata_anal에 할당
dustdata_anal <- read_excel("C:/Rstudy/sd.xls")
# dustdata.xlsx 파일을 불러온 후 dustdata_anal에 할당
dustdata_anal <- read_excel("C:/Rstudy/dustdata.xlsx")
View(dustdata_anal)
View(dustdata_anal)
# dustdata.xlsx 파일을 불러온 후 dustdata_anal에 할당
dustdata_anal <- read_excel("C:/Rstudy/dustdata.xlsx")
View(dustdata_anal)
# dustdata.xlsx 파일을 불러온 후 dustdata_anal에 할당
dustdata_anal <- read_excel("C:/Rstudy/dustdata1.xlsx")
View(dustdata_anal)
install.packages("descr")   # descr 패키지 설치
library(descr)      # descr 패키지 로드
count(dustdata_anal, yyyymmdd)  %>% arrange(desc(n))
head(dustdata_anal)
dustdata_anal <- read_excel("C:/Rstudy/dustdata1.xlsx")
head(dustdata_anal)
View(dustdata_anal)
srt(dustdata_anal)
srt(dustdata_anal)
str(dustdata_anal)
install.packages("descr")   # descr 패키지 설치
library(descr)      # descr 패키지 로드
install.packages("descr")
count(dustdata_anal, yyyymmdd)  %>% arrange(desc(n))
library(dplyr)
count(dustdata_anal, yyyymmdd)  %>% arrange(desc(n))
count(dustdata_anal, yyyymmdd)  %>% arrange(desc(n))
intall.packages("dplyr")
library(dplyr)
count(dustdata_anal, yyyymmdd)  %>% arrange(desc(n))
count(dustdata_anal, yyyymmdd)  %>% arrange(desc(n))
library(dplyr)
count(dustdata_anal, yyyymmdd)  %>% arrange(desc(n))
library(descr)      # descr 패키지 로드
count(dustdata_anal, yyyymmdd)  %>% arrange(desc(n))
dustdata_anal <- read_excel("C:/Rstudy/dustdata1.xlsx")
library(readxl)
dustdata_anal <- read_excel("C:/Rstudy/dustdata1.xlsx")
count(dustdata_anal, yyyymmdd)  %>% arrange(desc(n))
install.packages("utf8")
library(utf8)
count(dustdata_anal, yyyymmdd)  %>% arrange(desc(n))
str(dustdata_anal)
dustdata_anal <- read_excel("C:/Rstudy/1111.xlsx")
str(dustdata_anal)
dustdata_anal <- read_excel("C:/Rstudy/2222.xls")
library("readxl")
library("readxl")
library(readxl)
library(readxl)
library(readxl)
middle_mid_exam <- read_excel("C:/Rstudy/middle_mid_exam.xlsx")
View(middle_mid_exam)
library(readxl)
middle_mid_exam <- read_excel("C:/Rstudy/middle_mid_exam.xlsx")
View(middle_mid_exam)
library(reshape2)
install.packages("reshape2")
library(reshape2)
melt(middle_mid_exam)
library(reshape2)
melt(middle_mid_exam)
te <-melt(middle_mid_exam)
library(reshape2)               # reshape2 패키지 로드
melt_test <- melt(airquality)   # melt한 데이터를 melt_test 변수에 할당
head(melt_test)                 # melt_test 확인
head(airquality) # 1행부터 6행까지 출력하기
names(airquality) <- tolower(names(airquality)) # 소문자로 변환한 변수명으로 기존 변수명 대체
head(airquality)                                # 변환 결과 확인
melt_test <- melt(airquality)   # melt한 데이터를 melt_test 변수에 할당
library(reshape2)               # reshape2 패키지 로드
install.packages("reshape2")
library(reshape2)               # reshape2 패키지 로드
melt_test <- melt(airquality)   # melt한 데이터를 melt_test 변수에 할당
install.packages("reshape2")
library(reshape2)
library(reshape2)
install.packages("stringi")
library(reshape2)
melt(middle_mid_exam)
middle_mid_exam <- read_excel("C:/Rstudy/middle_mid_exam.xlsx")
library(readxl)
middle_mid_exam <- read_excel("C:/Rstudy/middle_mid_exam.xlsx")
melt(middle_mid_exam)
select(middle_mid_exam, ID, CLASS, MATHEMATICS)
library(dplyr)
select(middle_mid_exam, ID, CLASS, MATHEMATICS)
test <- select(middle_mid_exam, ID, CLASS, MATHEMATICS)
View(test)
dcast(test, ID ~ CLASS)
View(test)
test <- dcast(test, ID ~ CLASS)
View(test)
summarise(test, Summaize(class1), Summaize(class2), Summaize(class3))
summarize(test, Summaize(class1), Summaize(class2), Summaize(class3))
summarize(test, Summaize(class1), Summaize(class2), Summaize(class3))
library(dplyr)
summarize(test, Summaize(class1), Summaize(class2), Summaize(class3))
summarize(test, Sum(class1), Sum(class2), Sum(class3))
summarize(test, sum(class1))
summarize(test, sum(class1), sum(class1), sum(class1))
summarize(test, sum(class1), sum(class2), sum(class3))
summarize(test, sum(class1), sum(class2), sum(class3))
summarize(test, mean(class1), mean(class2), mean(class3))
summarize(test, sum(class1), sum(class2), sum(class3), mean(class1), mean(class2), mean(class3))
MATHEMATICS <- select(middle_mid_exam, ID, CLASS, MATHEMATICS)
MATHEMATICS <- dcast(MATHEMATICS, ID ~ CLASS)
middle_mid_exam <- read_excel("C:/Rstudy/middle_mid_exam.xlsx")
library(readxl)
middle_mid_exam <- read_excel("C:/Rstudy/middle_mid_exam.xlsx")
library(reshape2)
library(dplyr)
MATHEMATICS <- select(middle_mid_exam, ID, CLASS, MATHEMATICS)
MATHEMATICS <- dcast(MATHEMATICS, ID ~ CLASS)
filter(MATHEMATICS, CLASS1 >= 80)
filter(MATHEMATICS, class1 >= 80)
filter(MATHEMATICS, class1 >= 80) %>% n()
n() %>% filter(MATHEMATICS, class1 >= 80)
summarise() %>% filter(MATHEMATICS, class1 >= 80)
summarise(class1) %>% filter(MATHEMATICS, class1 >= 80)
filter(MATHEMATICS, class1 >= 80) %>% summarise(n(class1))
filter(MATHEMATICS, class1 >= 80) %>% summarise(n())
filter(MATHEMATICS, class1 >= 80) %>%
summarise(n())
arrange(middle_mid_exam, desc(MATHEMATICS), ENGLISH))
arrange(middle_mid_exam, desc(MATHEMATICS), ENGLISH)
middle_mid_exam %>% filter(MATHEMATICS>=80 & ENGLISH>=80))
middle_mid_exam %>% filter(MATHEMATICS>=80 & ENGLISH>=80)
middle_mid_exam %>% filter(MATHEMATICS>=80 & ENGLISH>=85)
arrange(middle_mid_exam %>% filter(MATHEMATICS>=80 | ENGLISH>=80)) %>% summarise(n())
middle_mid_exam %>% filter(MATHEMATICS>=80 | ENGLISH>=80)) %>% summarise(n())
middle_mid_exam %>% filter(MATHEMATICS>=80 & ENGLISH>=80)) %>% summarise(n())
middle_mid_exam %>% filter(MATHEMATICS>=80 & ENGLISH>=80) %>% summarise(n())
middle_mid_exam %>% filter(MATHEMATICS>=80 & ENGLISH>=85) %>% summarise(n())
library(dplyr) # dplyr 패키지 로드
# 성북구와 중구 데이터만 추출 및 확인
dustdata_anal <- dustdata %>% filter(area %in% c("성북구", "중구"))
View(dustdata_anal)
names(airquality) <-   tolower(names(airquality))
head(airquality)
library(readxl)
middle_mid_exam <- read_excel("middle_mid_exam.xlsx")
View(middle_mid_exam)
library(dplyr)
library(reshape2)
MATHEMATICS <- middle_mid_exam %>% select(CLASS, ID, MATHEMATICS)
MATHEMATICS <- dcast(MATHEMATICS, ID ~ CLASS)
ENGLISH <- middle_mid_exam %>% select(CLASS, ID, ENGLISH)
ENGLISH <- dcast(ENGLISH1, ID ~ CLASS)
library(dplyr)
library(reshape2)
MATHEMATICS <- middle_mid_exam %>% select(CLASS, ID, MATHEMATICS)
MATHEMATICS <- dcast(MATHEMATICS, ID ~ CLASS)
ENGLISH <- middle_mid_exam %>% select(CLASS, ID, ENGLISH)
ENGLISH <- dcast(ENGLISH, ID ~ CLASS)
View(MATHEMATICS)
MATHEMATICS %>% group_by(CLASS) %>% summarise(MATH_MEAN = mean(MATHEMATICS))
ENGLISH %>% group_by(CLASS) %>% summarise(ENG_MEAN = mean(ENGLISH))
View(middle_mid_exam)
View(middle_mid_exam)
MATHEMATICS %>% group_by(class1) %>% summarise(MATH_MEAN = mean(MATHEMATICS))
middle_mid_exam %>% group_by(CLASS) %>% summarise(ENG_MEAN = mean(ENGLISH))
middle_mid_exam %>% group_by(CLASS) %>% summarise(ENG_MEAN = mean(ENGLISH), ENG_SUM = sum(ENGLISH))
middle_mid_exam %>% group_by(CLASS) %>%
summarise(ENG_MEAN = mean(ENGLISH), ENG_SUM = sum(ENGLISH))
middle_mid_exam %>% group_by(CLASS) %>%
summarise(MATH_MEAN = mean(MATHEMATICS), MATH_SUM = sum(MATHEMATICS))
library(reshape2)
names(airquality) <- tolower(names(airquality)) # 소문자로 변환한 변수명으로 기존 변수명 대체
aq_melt <- melt(airquality, id = c("month", "day"), na.rm = TRUE)
acast(aq_melt, day ~ month ~ variable)
library(reshape2)               # reshape2 패키지 로드
melt_test <- melt(airquality)   # melt한 데이터를 melt_test 변수에 할당
head(melt_test)                 # melt_test 확인
tail(melt_test) # 뒤에서 1~6행 출력하기
head(melt_test)                 # melt_test 확인
tail(melt_test)                 # 뒤에서 1~6행 출력하기
tail(melt_test)                 # 뒤에서 1~6행 출력하기
tail(melt_test)                 # 뒤에서 1~6행 출력하기
tail(melt_test)                 # 뒤에서 1~6행 출력하기
tail(melt_test)                 # 뒤에서 1~6행 출력하기
tail(melt_test)                 # 뒤에서 1~6행 출력하기
tail(melt_test)                 # 뒤에서 1~6행 출력하기
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
x <- 10                                   # 숫자 데이터 10을 x 변수에 할당
x                                         # x 조회
x1 <- c(10, 20, 30)                       # 숫자 3개(10, 20, 30)로 구성된 x1 변수 생성
x1                                        # x1 조회
x2 <- c(10:15)                            # 데이터 10~15까지 연속된 숫자로 구성된 x2 변수 생성
x2                                        # x2 조회
x3 <- seq(10, 15)                         # 데이터 10~15까지 연속된 숫자로 구성된 x3 변수 생성
x3                                        # x3 조회
x4 <- seq(1, 10, by = 4)                  # 데이터 1~10까지 4간격으로 연속된 숫자로 구성된 x4 변수 생성
x4                                        # x4 조회
y <- "HI"				# 문자 데이터 “HI”를 y 변수에 할당
y # y 조회
y1 <- c("Hello", "Hi", "Hello ~ !")	# 문자 3개(“Hello”, “Hi”, “Hello ~!”)로 구성된 y1 변수 생성
y1					# y1 조회
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
str("test")
library()
library()
library()
Sys.setlocale("LC_ALL", "English_United States.1252")
library()
ggplot(economics, aes(x = date, y = psavert)) +
geom_line() + geom_hline(yintercept = mean(economics$psavert))
ggplot(economics, aes(x = date, y = psavert)) +
geom_line() +
geom_hline(yintercept = mean(economics$psavert))
gauge <- gvisGauge(CityPopularity, labelvar = "City", numvar = "Popularity",
options = list(min = 0, max = 1000))
ggmap(mapo_map) +
geom_point(data = station_code_final, aes(x = lon, y = lat),
colour = "red", size = 3) +
geom_text(data = station_code_final, aes(label = 역명, vjust = -1))
ggmap(hongdae_map) +
geom_point(data = station_code_final, aes(x = lon, y = lat), colour = "red", size = 3) +
geom_text(data = station_code_final, aes(label = 역명, vjust = -1)) +
geom_point(data = apart_code_final, aes(x = lon, y = lat)) +
geom_text(data = apart_code_final, aes(label = 단지명, vjust = -1)) +
geom_text(data = apart_code_final, aes(label = 거래금액, vjust = 1))
install.packages("readxl")
library(readxl)
library(reshape2)
install.packages("reshape2")
install.packages("reshape2")
station_data <- read.csv("역별_주소_및_전화번호.csv")
str(station_data)
station_data <- read.csv("역별_주소_및_전화번호.csv")
str(station_data)
ID <- c(1, 2, 3, 4, 5) # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F") # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX) # ID 변수와 SEX 변수로 데이터 프레임 생성
View(data_ex)
ID <- c(1, 2, 3, 4, 5)                      # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F")           # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX)   # ID 변수와 SEX 변수로 데이터 프레임 생성
save(data_ex, file = "C:\data_ex.csv")         # data_ex 데이터 세트을 data_ex.csv 파일로 저장
ID <- c(1, 2, 3, 4, 5)                      # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F")           # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX)   # ID 변수와 SEX 변수로 데이터 프레임 생성
save(data_ex, file = "C:\Rstudy\data_ex.csv")         # data_ex 데이터 세트을 data_ex.csv 파일로 저장
ID <- c(1, 2, 3, 4, 5)                      # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F")           # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX)   # ID 변수와 SEX 변수로 데이터 프레임 생성
save(data_ex, file = "C:/Rstudy/data_ex.csv")         # data_ex 데이터 세트을 data_ex.csv 파일로 저장
ID <- c(1, 2, 3, 4, 5)                      # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F")           # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX)   # ID 변수와 SEX 변수로 데이터 프레임 생성
wrire.csv(data_ex, file = "C:\Rstudy\data_ex.csv")         # data_ex 데이터 세트을 data_ex.csv 파일로 저장
ID <- c(1, 2, 3, 4, 5)                      # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F")           # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX)   # ID 변수와 SEX 변수로 데이터 프레임 생성
wrire.csv(data_ex, file = "C:/Rstudy/data_ex.csv")         # data_ex 데이터 세트을 data_ex.csv 파일로 저장
ID <- c(1, 2, 3, 4, 5)                      # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F")           # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX)   # ID 변수와 SEX 변수로 데이터 프레임 생성
write.csv(data_ex, file = "C:/Rstudy/data_ex.csv")         # data_ex 데이터 세트을 data_ex.csv 파일로 저장
ID <- c(1, 2, 3, 4, 5)                               # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F")                    # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX)            # ID 변수와 SEX 변수로 데이터 프레임 생성
write.table(data_ex, file = "C:/Rstudy/data_ex.txt") # data_ex 데이터 세트을 data_ex.txt 파일로 저장
ID <- c(1, 2, 3, 4, 5)                               # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F")                    # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX)            # ID 변수와 SEX 변수로 데이터 프레임 생성
write.table(data_ex, file = "C:/Rstudy/data_ex.txt", sep = ',') # data_ex 데이터 세트을 data_ex.txt 파일로 저장
ID <- c(1, 2, 3, 4, 5)                               # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F")                    # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX)            # ID 변수와 SEX 변수로 데이터 프레임 생성
write.table(data_ex, file = "C:/Rstudy/data_ex.txt", sep = '/t') # data_ex 데이터 세트을 data_ex.txt 파일로 저장
ID <- c(1, 2, 3, 4, 5)                               # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F")                    # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX)            # ID 변수와 SEX 변수로 데이터 프레임 생성
write.table(data_ex, file = "C:/Rstudy/data_ex.txt", sep = '\t') # data_ex 데이터 세트을 data_ex.txt 파일로 저장
ID <- c(1, 2, 3, 4, 5)                               # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F")                    # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX)            # ID 변수와 SEX 변수로 데이터 프레임 생성
write.table(data_ex, file = "C:/Rstudy/data_ex.txt", fileEncoding = ) # data_ex 데이터 세트을 data_ex.txt 파일로 저장
ID <- c(1, 2, 3, 4, 5)                               # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F")                    # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX)            # ID 변수와 SEX 변수로 데이터 프레임 생성
write.table(data_ex, file = "C:/Rstudy/data_ex.txt", fileEncoding = "") # data_ex 데이터 세트을 data_ex.txt 파일로 저장
ID <- c(1, 2, 3, 4, 5)                               # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F")                    # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX)            # ID 변수와 SEX 변수로 데이터 프레임 생성
write.table(data_ex, file = "C:/Rstudy/data_ex.txt", quote = FALSE) # data_ex 데이터 세트을 data_ex.txt 파일로 저장
ID <- c(1, 2, 3, 4, 5)                               # 데이터 1, 2, 3, 4, 5를 변수 ID에 할당
SEX <- c("F", "M", "F", "M", "F")                    # 데이터 F, M, F, M, F를 변수 SEX에 할당
data_ex <- data.frame(ID = ID, SEX = SEX)            # ID 변수와 SEX 변수로 데이터 프레임 생성
write.table(data_ex, file = "C:/Rstudy/data_ex.txt") # data_ex 데이터 세트을 data_ex.txt 파일로 저장
library(readxl)
mid_exam <- read_excel(“C:/Rstudy/mid_exam.xlsx”)
mid_exam <- rename(mid_exam, MATH_MID = MATH, ENG_MID = ENG)
View(mid_exam)
library(readxl)
mid_exam <- read_excel("C:/Rstudy/mid_exam.xlsx")
mid_exam <- rename(mid_exam, MATH_MID = MATH, ENG_MID = ENG)
View(mid_exam)
library(readxl)
middle_mid_exam <- read_excel("C:/Rstudy/middle_mid_exam.xlsx”)
View(middle_mid_exam)
library(readxl)
middle_mid_exam <- read_excel("C:/Rstudy/middle_mid_exam.xlsx")
View(middle_mid_exam)
library(readxl)
middle_mid_exam <- read_excel("C:/Rstudy/middle_mid_exam.xlsx")
View(middle_mid_exam)
library(dplyr)
library(reshape2)
MATHEMATICS <- middle_mid_exam %>% select(CLASS, ID, MATHEMATICS)
MATHEMATICS <- dcast(MATHEMATICS, ID ~ CLASS)
ENGLISH <- middle_mid_exam %>% select(CLASS, ID, ENGLISH)
ENGLISH <- dcast(ENGLISH1, ID ~ CLASS)
library(dplyr)
library(reshape2)
MATHEMATICS <- middle_mid_exam %>% select(CLASS, ID, MATHEMATICS)
MATHEMATICS <- dcast(MATHEMATICS, ID ~ CLASS)
ENGLISH <- middle_mid_exam %>% select(CLASS, ID, ENGLISH)
ENGLISH <- dcast(ENGLISH1, ID ~ CLASS)
MATHEMATICS <- middle_mid_exam %>% select(CLASS, ID, MATHEMATICS)
MATHEMATICS <- dcast(MATHEMATICS, ID ~ CLASS)
ENGLISH <- middle_mid_exam %>% select(CLASS, ID, ENGLISH)
ENGLISH <- dcast(ENGLISH, ID ~ CLASS)
MATHEMATICS <- middle_mid_exam %>% select(CLASS, ID, MATHEMATICS)
MATHEMATICS <- dcast(MATHEMATICS, ID ~ CLASS)
ENGLISH <- dcast(ENGLISH, ID ~ CLASS)
View(MATHEMATICS)
View(MATHEMATICS)
View(ENGLISH)
View(ENGLSIH)
library(dplyr)
library(reshape2)
MATHEMATICS <- middle_mid_exam %>% select(CLASS, ID, MATHEMATICS)
MATHEMATICS <- dcast(MATHEMATICS, ID ~ CLASS)
ENGLISH <- middle_mid_exam %>% select(CLASS, ID, ENGLISH)
ENGLISH <- dcast(ENGLISH1, ID ~ CLASS)
library(readxl)
middle_mid_exam <- read_excel("C:/Rstudy/middle_mid_exam.xlsx")
library(dplyr)
library(reshape2)
MATHEMATICS <- middle_mid_exam %>% select(CLASS, ID, MATHEMATICS)
MATHEMATICS <- dcast(MATHEMATICS, ID ~ CLASS)
ENGLISH <- middle_mid_exam %>% select(CLASS, ID, ENGLISH)
ENGLISH <- dcast(ENGLISH1, ID ~ CLASS)
View(ENGLSIH)
ENGLISH <- dcast(ENGLISH, ID ~ CLASS)
View(ENGLSIH)
library(dplyr)
library(reshape2)
MATHEMATICS <- middle_mid_exam %>% select(CLASS, ID, MATHEMATICS)
MATHEMATICS <- dcast(MATHEMATICS, ID ~ CLASS)
ENGLISH <- middle_mid_exam %>% select(CLASS, ID, ENGLISH)
ENGLISH <- dcast(ENGLISH, ID ~ CLASS)
View(ENGLSIH)
View(ENGLISH)
ex_data <- read.table("C:/Rstudy/data_ex.txt") # data_ex.txt 파일을 ex_data로 저장
View(ex_data) # ex_data 조회
ex_data <- read.table("C:\Rstudy\data_ex.txt") # data_ex.txt 파일을 ex_data로 저장
View(ex_data) # ex_data 조회
install.packages("dplyr")
